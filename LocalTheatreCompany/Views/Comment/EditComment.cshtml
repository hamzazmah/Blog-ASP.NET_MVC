@model LocalTheatreCompany.Models.Comment

@{
    ViewData["Image"] = "/img/edit.jpg";
    ViewData["Heading"] = "Edit Comment";
}

<div class="container">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CommentID)

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.CommentDescription, htmlAttributes: new { @class = "control-label col-md-8" })</h3>
                <div class="col-md-10">
                    <h5>
                        @Html.EditorFor(model => model.CommentDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CommentDescription, "", new { @class = "text-danger" })
                    </h5>
                </div>
            </div>

            <!-- If the User Is Admin then they can change the Is Accepted Option -->
            if (Model.User.CurrentRole.Equals("Admin") && Model.UserID != ViewBag.CurrentUser.Id)
            {
                <div class="form-group">
                    <div class="col-md-10">
                        <h3>Approve this Comment</h3>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsAccepted)
                            @Html.ValidationMessageFor(model => model.IsAccepted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default btn-success" />
                    |  @Html.ActionLink("Back to Post", "DetailPost", "Post", new { id = Model.PostID }, new { @class = "btn btn-primary" })
                </div>
            </div>

        }
        <div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
