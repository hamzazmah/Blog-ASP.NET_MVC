@model LocalTheatreCompany.Models.Customer

@{
    ViewData["Image"] = "/img/manage.jpg";
    ViewData["Heading"] = "Edit your Details";
}


<div class="container">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <h3 class="text-capitalize">@Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <h3 class="text-capitalize">
                    @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-5" })
                </h3>
            <div class="col-md-10">                
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            <h3 class="text-capitalize">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-5" })
            </h3>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                <h3 class="text-capitalize">@Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-5" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3 class="text-capitalize">@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-5" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3 class="text-capitalize">@Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-5" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>

        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
