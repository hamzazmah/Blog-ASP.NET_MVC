@model LocalTheatreCompany.Models.ViewModels.CreateStaffViewModel

@{
    ViewData["Image"] = "/img/admin.jpg";
    ViewData["Heading"] = "Create a New Staff Member";
}

<div class="container">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <h3>@Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.EmailConfirm, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.EmailConfirm)
                        @Html.ValidationMessageFor(model => model.EmailConfirm, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.PhoneConfirm, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.PhoneConfirm)
                        @Html.ValidationMessageFor(model => model.PhoneConfirm, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h3>@Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-6" })</h3>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Role, Model.Roles, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                    @Html.ActionLink("Back to List", "Users", null, new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
    }

</div>
